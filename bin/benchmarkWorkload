#!/usr/bin/env python

import os
import sys
import subprocess
import re

def usage():
    print "Usage: %s pathToResults workload recordcount" % sys.argv[0]
    sys.exit(1)

# distribution = "zipfian"
# distribution = "scrambledzipfian"
distribution = "uniform"

typeTr = [
	#"TWOPL",
	# "OCC",
	# "OCCNA",
	#"OCCLL",
	# "OCCRDIAS",
	#"OCCMV",
	"SI",
	"NMSI",
    # "NMSI+TO"
]

# Number of operaction
operationcount = [100000000]

threads = [1,2,4,8,16,24,32,48,64]

if len(sys.argv) < 4:
    usage()

pathresult = sys.argv[1]
workload = sys.argv[2]
recordcount = sys.argv[3]

if os.path.exists("/local/cj.gomes/TransactionalHashMapJava"):
    p = re.compile('\* \\w*')
    output = subprocess.Popen("git branch --no-color 2> /dev/null", shell=True,
                              stdout=subprocess.PIPE, cwd='/local/cj.gomes/TransactionalHashMapJava').communicate()[0]
    branchTransaction = p.findall(output)[0]

    output = subprocess.Popen("git branch --no-color 2> /dev/null", shell=True,
                              stdout=subprocess.PIPE, cwd='/local/cj.gomes/YCSBThesis').communicate()[0]
    branchYCSB = p.findall(output)[0]

    print "GIT SYSTEM: "+branchTransaction
    print "GIT YSCB: "+branchYCSB

print "RUN: "+pathresult+" "+workload+" "+recordcount

# ycsb_command = ["./bin/ycsb", "load_run", "myhashmap", "-P", "workloads/txworkloada", "-p", "myhashmap.verbose=false", "-p", "measurementtype=timeseries", "-p", "timeseries.granularity=20", "-p", "transaction.type=SI", "-p", "exportfile=/local/cj.gomes/results.csv", "-p", "exporter=com.yahoo.ycsb.measurements.exporter.CSVMeasurementsExporter", "-p", "recordcount=1000", "-p", "operationcount=10000000", "-p", "requestdistribution=uniform", "-p", "threadcount=32", "-p", "maxexecutiontime=40", "-s"]
# ./bin/ycsb load_run myhashmap -P workloads/txworkloada -p myhashmap.verbose=false -p measurementtype=timeseries -p timeseries.granularity=20 -p transaction.type=SI -p exportfile=/local/cj.gomes/results.csv -p exporter=com.yahoo.ycsb.measurements.exporter.CSVMeasurementsExporter -p recordcount=1000 -p operationcount=10000000 -p requestdistribution=uniform -p threadcount=32 -p maxexecutiontime=40 -s

for i in range(1,4):
    for no in operationcount:
        for typeT in typeTr:
            for thread in threads:
                ycsb_command = ["./bin/ycsb", "load_run", "myhashmap", "-P", "workloads/"+str(workload), \
                            "-p", "measurementtype=timeseries", \
                            "-p", "timeseries.granularity=20", "-p", "transaction.type="+str(typeT), \
                            "-p", "exportfile="+pathresult+"results.csv", \
                            "-p", "exporter=com.yahoo.ycsb.measurements.exporter.CSVMeasurementsExporter", \
                            "-p", "recordcount="+str(recordcount), "-p", "operationcount="+str(no), \
                            "-p", "threadcount="+str(thread), \
                            "-p", "maxexecutiontime=60", \
                            "-p", "requestdistribution="+distribution, \
                            "-p", "fieldsize=4", "-s"]
                            # "-s"]
                # print ycsb_command
                subprocess.call(ycsb_command)

subprocess.Popen('cat ~/mail.txt | /local/cj.gomes/mail/msmtp/bin/msmtp -t cj.gomes@campus.fct.unl.pt', shell=True)
subprocess.Popen('cp /local/cj.gomes/result/* ~/raw', shell=True)
# keys = ["workload", "recordcount", "operationcount", "threads", "run", "distribution", \
                        # "n_inserts", "avg_inserts", "min_inserts", "max_inserts", "n_reads", "avg_reads", "min_reads", \
                        # "max_reads", "n_updates", "avg_updates", "min_updates", "max_updates"];
